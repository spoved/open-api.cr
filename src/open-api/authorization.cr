class Open::Api
  alias SecurityScheme = Open::Api::Security::ApiKeyAuth | Open::Api::Security::Auth | Open::Api::Security::OAuth2 | Open::Api::Security::OpenId

  class Security
    include JSON::Serializable
    include YAML::Serializable

    @[JSON::Field(key: "BasicAuth")]
    @[YAML::Field(key: "BasicAuth")]
    property basic_auth : Auth

    @[JSON::Field(key: "BearerAuth")]
    @[YAML::Field(key: "BearerAuth")]
    property bearer_auth : Auth

    @[JSON::Field(key: "ApiKeyAuth")]
    @[YAML::Field(key: "ApiKeyAuth")]
    property api_key_auth : ApiKeyAuth

    @[JSON::Field(key: "OpenID")]
    @[YAML::Field(key: "OpenID")]
    property open_id : OpenId

    @[JSON::Field(key: "OAuth2")]
    @[YAML::Field(key: "OAuth2")]
    property o_auth2 : OAuth2

    struct ApiKeyAuth
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "type")]
      @[YAML::Field(key: "type")]
      property auth_type : String = "apiKey"
      @[JSON::Field(key: "in")]
      @[YAML::Field(key: "in")]
      property api_key_in : String
      property name : String
      property description : String? = nil

      def initialize(@name : String, @api_key_in : String = "header", @description : String? = nil); end

      def self.jwt_bearer
        ApiKeyAuth.new(
          name: "Authorization",
          api_key_in: "header",
          description: <<-END
            For accessing the API a valid JWT token must be passed in all the queries in
            the 'Authorization' header.

            A valid JWT token is generated by the API and retourned as answer of a call
            to the route /login giving a valid user & password.

            The following syntax must be used in the 'Authorization' header :

                Bearer xxxxxx.yyyyyyy.zzzzzz
            END
        )
      end
    end

    struct Auth
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "type")]
      @[YAML::Field(key: "type")]
      property auth_type : String = "auth"
      property scheme : String
    end

    struct OAuth2
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "type")]
      @[YAML::Field(key: "type")]
      property auth_type : String
      property flows : Flows
    end

    struct Flows
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "authorizationCode")]
      @[YAML::Field(key: "authorizationCode")]
      property authorization_code : AuthorizationCode
    end

    struct AuthorizationCode
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "authorizationUrl")]
      @[YAML::Field(key: "authorizationUrl")]
      property authorization_url : String
      @[JSON::Field(key: "tokenUrl")]
      @[YAML::Field(key: "tokenUrl")]
      property token_url : String
      property scopes : Scopes
    end

    struct Scopes
      include JSON::Serializable
      include YAML::Serializable
      property read : String
      property write : String
      property admin : String
    end

    struct OpenId
      include JSON::Serializable
      include YAML::Serializable

      @[JSON::Field(key: "type")]
      @[YAML::Field(key: "type")]
      property auth_type : String
      @[JSON::Field(key: "openIdConnectUrl")]
      @[YAML::Field(key: "openIdConnectUrl")]
      property open_id_connect_url : String
    end
  end
end
